package fynegui

import (
	"fyne.io/fyne"
	"fyne.io/fyne/canvas"
	"fyne.io/fyne/layout"
	"fyne.io/fyne/theme"
	"fyne.io/fyne/widget"
	"git.parallelcoin.io/dev/pod/cmd/node/con"
	"git.parallelcoin.io/dev/pod/pkg/logo"
	"git.parallelcoin.io/dev/pod/pkg/util/cl"
)

// TopLevel is the the top level navigation of the interface
func TopLevel(cx *con.Text, a fyne.App, mainpage *fyne.Container) *widget.Box {
	var mainOverview, mainSend, mainReceive, mainHistory, mainAddresses, mainExplorer, mainMining, mainSettings *widget.Button
	mainlogo := canvas.NewImageFromResource(logo.SVG)
	mainlogo.SetMinSize(fyne.NewSize(48, 48))
	settingsPage := Settings(cx, a)

	mainOverview = widget.NewButton("Overview", func() {
		mainOverview.Style = widget.ButtonStyle(1)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		(*mainpage).Objects[0] = Frame("overview", CenteredLabel("content"))
	})
	mainOverview.Style = widget.ButtonStyle(1)
	mainSend = widget.NewButton("Send", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(1)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("send", CenteredLabel("content"))
	})
	mainReceive = widget.NewButton("Receive", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(1)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("receive", CenteredLabel("content"))
	})
	mainHistory = widget.NewButton("History", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(1)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("history", CenteredLabel("content"))
	})
	mainAddresses = widget.NewButton("Addresses", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(1)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("addresses", CenteredLabel("content"))
	})
	mainExplorer = widget.NewButton("Explorer", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(1)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("explorer", CenteredLabel("content"))
	})
	mainMining = widget.NewButton("Mining", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(1)
		mainSettings.Style = widget.ButtonStyle(0)
		mainpage.Objects[0] = Frame("mining", CenteredLabel("content"))
	})
	mainSettings = widget.NewButton("Settings", func() {
		mainOverview.Style = widget.ButtonStyle(0)
		mainSend.Style = widget.ButtonStyle(0)
		mainReceive.Style = widget.ButtonStyle(0)
		mainHistory.Style = widget.ButtonStyle(0)
		mainAddresses.Style = widget.ButtonStyle(0)
		mainExplorer.Style = widget.ButtonStyle(0)
		mainMining.Style = widget.ButtonStyle(0)
		mainSettings.Style = widget.ButtonStyle(1)
		mainpage.Objects[0] = settingsPage
	})
	var darkToggle *widget.Button
	darkToggle = widget.NewButton("Light", func() {
		if darkToggle.Text == "Dark" {
			a.Settings().SetTheme(theme.DarkTheme())
			darkToggle.SetText("Light")
		} else if darkToggle.Text == "Light" {
			a.Settings().SetTheme(theme.LightTheme())
			darkToggle.SetText("Dark")
		}
	})
	topbarSpacer := layout.NewSpacer()
	topbarSpacer.Resize(fyne.NewSize(24, 24))
	log <- cl.Info{"creating settings page", cl.Ine()}
	return widget.NewHBox(
		fyne.NewContainerWithLayout(
			layout.NewCenterLayout(),
			fyne.NewContainerWithLayout(
				layout.NewHBoxLayout(),
				mainlogo,
			),
		),
		mainOverview,
		mainSend,
		mainReceive,
		mainHistory,
		mainAddresses,
		mainExplorer,
		mainMining,
		topbarSpacer,
		darkToggle,
		mainSettings,
	)
}
